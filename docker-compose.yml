version: '3'

services:
  #---------------------------------------------#
  #-- Reverse proxy gateway --------------------#
  #---------------------------------------------#

  # The global gateway container
  gateway:
    build:
      context: docker/dev/gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - client-gateway
      - api-gateway


  #-------------------------------------------#
  #-- Client services ------------------------#
  #-------------------------------------------#

  # The client gateway container
  client-gateway:
    build:
      context: docker/dev/client/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    links:
      - client-app

  # The client application container
  client-app:
    build:
      context: docker/dev/client/app
      dockerfile: Dockerfile
    ports:
      - "3333:3000"
      # TODO: Check if its needed
      - "24678:24678"
    volumes:
      - ./client:/var/www/client


  #-------------------------------------------#
  #-- API services ---------------------------#
  #-------------------------------------------#

  # The client gateway container (based on Nginx)
  api-gateway:
    build:
      context: docker/dev/api/gateway
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/api
    ports:
      - "8081:80"
    links:
      - api-app

  # The api application container (based on PHP FPM)
  api-app:
    build:
      context: docker/dev/api/app
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/api
    environment:
      # If you down want to use xDebug, set remote_enable=0
      XDEBUG_CONFIG: "remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    ports:
      - "8888:8000"
    depends_on:
      - api-postgres
      - api-postgres-testing
      - api-redis
      - api-mailhog

  # The PostgreSQL container
  api-postgres:
    build:
      context: docker/dev/api/postgres
      dockerfile: Dockerfile
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./docker/dev/api/postgres/dumps/:/tmp/
    ports:
      - "54321:5432"
    # TODO: make it use the .env file
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app

  # The PostgreSQL container for testing
  api-postgres-testing:
    build:
      context: docker/dev/api/postgres
      dockerfile: Dockerfile
    # TODO: make it use the .env file
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app

  # The Redis container
  api-redis:
    build:
      context: docker/dev/api/redis
      dockerfile: Dockerfile
    # Add one more volume for configuration
    volumes:
      - redis:/data
    ports:
      - "63791:6379"

  # The queue container
  api-queue:
    build:
      context: docker/dev/api/queue
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/api
    links:
      - api-redis
      - api-postgres

  # The schedule container
  api-schedule:
    build:
      context: docker/dev/api/schedule
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/api
    links:
      - api-redis
      - api-postgres

  # The Mailhog container
  api-mailhog:
    build:
      context: docker/dev/api/mailhog
      dockerfile: Dockerfile
    ports:
      - "8026:8025"


volumes:
  postgres:
    driver: local
  redis:
    driver: local
